### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format. 

spring.jmx:
   enabled: false


# spring.jpa:
   # database: MYSQL
   # hibernate:
     # ddl-auto: update
# spring.datasource:
   # url: jdbc:mysql://localhost:3306/db_example
   # username: springuser
   # password: ThePassword
  

spring.datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:bootexample;MODE=MySQL;DB_CLOSE_ON_EXIT=FALSE
#url: jdbc:h2:file:~/test;DB_CLOSE_ON_EXIT=FALSE


# Datasource
#spring.datasource:
 #   driverClassName: org.h2.Driver    
  #  url: jdbc:h2:mem:agni1;MODE=MySQL;DB_CLOSE_ON_EXIT=FALSE
   # username: sa

server:
  port: 8090

#todo: make sure to always enable security in production
security:
  basic:
    enabled: false

#management endpoints on a separate port
management:
  port: 8091
  security:
    enabled: false # management port is internal only. no need to secure it.

#default project info followed by actual injected pom-specified values.
project:
  name: Agni1
  version: 0.1
  description: FHIR App
info:
  build:
    artifact: ${project.artifactId}
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}

hotel.service:
  name: 'default profile:'
---
spring:
  profiles: test
  h2:
    console:
      enabled: true

#spring.jpa:
#    hibernate.ddl-auto: create-drop

user.service:
  name: 'test profile:'
  
logging:
  file: boot_agni.log
  org.hibernate: INFO


 